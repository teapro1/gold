import asyncio
import requests
from bs4 import BeautifulSoup
from telegram import Bot
from apscheduler.schedulers.asyncio import AsyncIOScheduler

# Th√¥ng tin c·∫•u h√¨nh
TELEGRAM_TOKEN = "7693032578:AAHIfmBIzhSklkKgP5VhsVFy8PLioPxj5IQ"
CHAT_ID = "6998063684"

# C·∫•u h√¨nh proxy
PROXIES = {
    "http": "http://118.69.7.30:15604",
    "https": "http://118.69.7.30:15604"
}

# Kh·ªüi t·∫°o bot Telegram
bot = Bot(token=TELEGRAM_TOKEN)

def get_sjc_price():
    try:
        url = "https://sjc.com.vn/"
        response = requests.get(url, proxies=PROXIES, timeout=10)  # S·ª≠ d·ª•ng proxy
        soup = BeautifulSoup(response.text, "html.parser")

        # T√¨m b·∫£ng gi√° v√†ng
        table = soup.find("table", class_="sjc-table-show-price")
        if not table:
            return "Kh√¥ng t√¨m th·∫•y b·∫£ng gi√° v√†ng SJC."

        rows = table.find_all("tr")

        # T√¨m gi√° mua v√† b√°n cho "V√†ng SJC 1L, 10L, 1KG" t·∫°i H·ªì Ch√≠ Minh
        for row in rows:
            cells = row.find_all("td")
            if len(cells) == 3 and "V√†ng SJC 1L, 10L, 1KG" in cells[0].text:
                price_buy = cells[1].text.strip()
                price_sell = cells[2].text.strip()
                return f"Mua: {price_buy} VNƒê, B√°n: {price_sell} VNƒê"

        return "Kh√¥ng t√¨m th·∫•y th√¥ng tin gi√° v√†ng SJC."
    except Exception as e:
        return f"L·ªói khi l·∫•y gi√° v√†ng SJC: {e}"

def get_pnj_price():
    try:
        url = "https://www.pnj.com.vn/"
        response = requests.get(url, timeout=10)  # Kh√¥ng s·ª≠ d·ª•ng proxy
        soup = BeautifulSoup(response.text, "html.parser")

        # T√¨m v·ªã tr√≠ ch·ª©a gi√° v√†ng PNJ (c·∫ßn x√°c ƒë·ªãnh ƒë√∫ng class t·ª´ HTML th·ª±c t·∫ø)
        price_buy = soup.find("span", class_="price_buy_class").text.strip()
        price_sell = soup.find("span", class_="price_sell_class").text.strip()

        return f"Mua: {price_buy} VNƒê, B√°n: {price_sell} VNƒê"
    except Exception as e:
        return f"L·ªói khi l·∫•y gi√° v√†ng PNJ: {e}"

async def send_gold_prices():
    try:
        sjc_price = get_sjc_price()
        pnj_price = get_pnj_price()

        # So·∫°n n·ªôi dung tin nh·∫Øn
        message = f"üìà Gi√° v√†ng h√¥m nay:\n\n"
        message += f"üèÖ SJC:\n{sjc_price}\n\n"
        message += f"üèÖ PNJ:\n{pnj_price}\n"

        # G·ª≠i tin nh·∫Øn qua Telegram
        await bot.send_message(chat_id=CHAT_ID, text=message)
        print("ƒê√£ g·ª≠i th√¥ng b√°o Telegram!")
    except Exception as e:
        print(f"L·ªói khi g·ª≠i tin nh·∫Øn: {e}")

async def main():
    print("ƒêang l·∫•y gi√° v√†ng v√† g·ª≠i th√¥ng b√°o...")

    # T·∫°o l·ªãch ch·∫°y ƒë·ªãnh k·ª≥
    scheduler = AsyncIOScheduler()
    scheduler.add_job(send_gold_prices, 'interval', minutes=5)  # L·∫∑p l·∫°i m·ªói 5 ph√∫t

    # B·∫Øt ƒë·∫ßu scheduler trong event loop hi·ªán t·∫°i
    scheduler.start()

    # Gi·ªØ ch∆∞∆°ng tr√¨nh ch·∫°y m√£i
    await asyncio.Event().wait()

if __name__ == "__main__":
    try:
        asyncio.run(main())  # S·ª≠ d·ª•ng asyncio.run ƒë·ªÉ kh·ªüi ƒë·ªông event loop
    except KeyboardInterrupt:
        print("Ch∆∞∆°ng tr√¨nh ƒë√£ b·ªã h·ªßy.")
